<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">


	<flow name="balanceInqValidationFlow">
		<message-filter onUnaccepted="invalidParameterFlow"
			doc:name="Message">
			<and-filter doc:name="And">
				<expression-filter expression="#[originalPayload['token'] != null]" />
				<expression-filter expression="#[originalPayload['fromMember'] != null]" />
			</and-filter>
		</message-filter>

		<set-variable
			value="#[defaultAccountID = (originalPayload['accountID'] == null) ? ${api.default.account.id} : originalPayload['accountID']]"
			variableName="defaultAccountID" doc:name="Variable" />

		<expression-transformer
			expression="#[originalPayload['accountID']=flowVars['defaultAccountID'];originalPayload]"
			doc:name="Expression" />

		<flow-ref name="tokenValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<flow-ref name="accessValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<set-payload value="#[originalPayload]" />
		<flow-ref name="balanceInqConfigFlow" />
	</flow>

	<flow name="confirmPaymentValidationFlow">
		<message-filter onUnaccepted="invalidParameterFlow"
			doc:name="Message">
			<and-filter doc:name="And">
				<expression-filter expression="#[originalPayload['token'] != null]" />
				<expression-filter expression="#[originalPayload['requestID'] != null]" />
				<expression-filter expression="#[originalPayload['otp'] != null]" />
			</and-filter>
		</message-filter>

		<flow-ref name="tokenValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<set-payload value="#[originalPayload]" />
		<flow-ref name="confirmPaymentConfigFlow" />
	</flow>

	<flow name="requestPaymentValidationFlow">
		<message-filter onUnaccepted="invalidParameterFlow"
			doc:name="Message">
			<and-filter doc:name="And">
				<expression-filter expression="#[originalPayload['token'] != null]" />
				<expression-filter expression="#[originalPayload['fromMember'] != null]" />
				<expression-filter expression="#[originalPayload['toMember'] != null]" />
				<expression-filter expression="#[originalPayload['amount'] != null]" />
				<expression-filter expression="#[originalPayload['traceNumber'] != null]" />
				<expression-filter expression="#[originalPayload['transferTypeID'] != null]" />
			</and-filter>
		</message-filter>

		<logger level="INFO" message="#[payload]" />
		<flow-ref name="tokenValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<flow-ref name="accessValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<set-payload value="#[originalPayload]" />
		<flow-ref name="requestPaymentConfigFlow" />
	</flow>


	<flow name="trxHistoryValidationFlow">
		<message-filter onUnaccepted="invalidParameterFlow"
			doc:name="Message">
			<and-filter doc:name="And">
				<expression-filter expression="#[originalPayload['token'] != null]" />
				<expression-filter expression="#[originalPayload['fromMember'] != null]" />
			</and-filter>
		</message-filter>

		<set-variable
			value="#[defaultAccountID = (originalPayload['accountID'] == null) ? ${api.default.account.id} : originalPayload['accountID']]"
			variableName="defaultAccountID" doc:name="Variable" />

		<expression-transformer
			expression="#[originalPayload['accountID']=flowVars['defaultAccountID'];originalPayload]"
			doc:name="Expression" />

		<set-variable
			value="#[defaultCurrentPage = (originalPayload['currentPage'] == null) ? '0' : originalPayload['currentPage']]"
			variableName="defaultCurrentPage" doc:name="Variable" />

		<expression-transformer
			expression="#[originalPayload['currentPage']=flowVars['defaultCurrentPage'];originalPayload]"
			doc:name="Expression" />

		<set-variable
			value="#[defaultPageSize = (originalPayload['pageSize'] == null) ? '15' : originalPayload['pageSize']]"
			variableName="defaultPageSize" doc:name="Variable" />

		<expression-transformer
			expression="#[originalPayload['pageSize']=flowVars['defaultPageSize'];originalPayload]"
			doc:name="Expression" />

		<flow-ref name="tokenValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<flow-ref name="accessValidation" />
		<message-filter onUnaccepted="requestValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload == 'ALLOWED']" />
		</message-filter>

		<set-payload value="#[originalPayload]" />
		<flow-ref name="trxHistoryConfigFlow" />
	</flow>


</mule>
